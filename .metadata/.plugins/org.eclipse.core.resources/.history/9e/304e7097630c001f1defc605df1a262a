package chap99_homework.homework05;

public class PrintStudentRak {
	// 학과별 배열을 만들어주는 메소드
	public void makMajorArr(Student[] stArr, int index) {
		int mathMajorCnt = 0;
		int engMajorCnt = 0;
		int comMajorCnt = 0;
		
		for(int i = 0; i < stArr.length; i++) {
			if(stArr[i].getClass().getName().equals(MathStudent.class.getClass().getName())) {
				mathMajorCnt++;
			} else if(stArr[i].getClass().getName().equals(EngStudent.class.getClass().getName())) {
				engMajorCnt++;
			} else if(stArr[i].getClass().getName().equals(ComStudent.class.getClass().getName())) {
				comMajorCnt++;
			}
		}
		
		// 학과별로 새로운 배열 생성
		MathStudent[] mathStudentArr = new MathStudent[mathMajorCnt];
		EngStudent[] engStudentArr = new EngStudent[engMajorCnt];
		ComStudent[] comStudentArr = new ComStudent[comMajorCnt];
		
		int pushMathCnt = 0;
		int pushEngCnt = 0;
		int pushComCnt = 0;
		
		for(int j = 0; j < stArr.length; j++) {
			if(stArr[j].getClass().getName().equals(MathStudent.class.getClass().getName())) {
				if(pushMathCnt != mathStudentArr.length) {
					mathStudentArr[pushMathCnt++] = (MathStudent) stArr[j];
				}
			} else if(stArr[j].getClass().getName().equals(EngStudent.class.getClass().getName())) {
				if(pushEngCnt != engStudentArr.length) {
					engStudentArr[pushEngCnt++] = (EngStudent) stArr[j];
				}
			} else if(stArr[j].getClass().getName().equals(ComStudent.class.getClass().getName())) {
				if(pushComCnt != comStudentArr.length) {
					comStudentArr[pushComCnt++] = (ComStudent) stArr[j];
				}
			}
		}
		
		// 성적순으로 출력
		printRankArray(mathStudentArr, engStudentArr, comStudentArr);
	}
	
	// 학과별 배열을 성적순대로 정렬하고 출력하는 메소드
	public void majorRank(Student[] stArr, String major) {
		
	}
	
	// 학과별 배열을 모두 받아서 majorRank로 전달하는 메소드
	public void printRankArray(MathStudent[] mathStudentArr, EngStudent[] engStudentArr,
			ComStudent[] comStudentArr) {
		majorRank(mathStudentArr, "수학");
		majorRank(engStudentArr, "영어");
		majorRank(comStudentArr, "컴공");
	}
}
