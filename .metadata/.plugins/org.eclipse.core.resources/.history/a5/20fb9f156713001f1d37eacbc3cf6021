package homework13.middle;

public class Middle {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		StringBuilder sbParam1 = new StringBuilder("abcde");
		StringBuilder sbParam2 = new StringBuilder("fghij");
		
		StringBuilder resultSb = combineStrBuilder(sbParam1, sbParam2, (s1, s2) -> {
			s1.append(s2);
			StringBuilder returnSb = new StringBuilder();
			for(int i = s1.length() - 1; i > 0; i--) {
				returnSb.append(s1.charAt(i));
			}
			
			return returnSb;
		});
		
		System.out.println(resultSb.toString());
	}
	// 1. 두 개의 StringBuilder 값을 매개변수로 받아 두 개의 값을 합친 후 역순으로 바꿔서 리턴하는 combineStrBuilder를 람다식으로 구현하세요.
	// StringBuilderUtils 함수형 인터페이스 선언, StringBuilder combineStrBuilder(StringBuilder sb1, StringBuilder sb2) 추상메소드 선언
	public static StringBuilder combineStrBuilder(StringBuilder sb1, StringBuilder sb2, StringBuilderUtils stringBuilderUtils) {
		return stringBuilderUtils.combineStrBuilder(sb1, sb2);
	}
	
	// 2. 2번 문제에서 StringBuilder 두 개를 합치는 메소드 appendSb와 역순으로 변경하는 메소드 reverseSb를 각각 선언하고
	// StringBuilder의 메소드를 참조하여 combineStrBuilder 각각 구현하세요.
	public static StringBuilder appendSb(StringBuilder sb1, StringBuilder sb2) {
		StringBuilder reSb =
		combineStrBuilder(sb1, sb2, (sbParam1, sbParam2) -> {
			sbParam1.append(sbParam2);
			StringBuilder returnSb = new StringBuilder();
			for(int i = sbParam1.length() - 1; i > 0; i--) {
				returnSb.append(sbParam1.charAt(i));
			}
			return returnSb;
		});
		return reSb;
	}
}
